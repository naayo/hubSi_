<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Get_current_EquipSin_status</name>
        <label>Get current EquipSin status</label>
        <locationX>1143</locationX>
        <locationY>391</locationY>
        <actionName>Flow_ChangementStatutEquipSin</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Is_there_any_barcode_scanned</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>barcodeString</name>
            <value>
                <elementReference>Saisie_sinistre</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>getCurrentStatus</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>selectedRT</name>
            <value>
                <elementReference>EquipSinRT</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <name>Jump_to_the_final_status</name>
        <label>Jump to the final status</label>
        <locationX>1598</locationX>
        <locationY>723</locationY>
        <actionName>Flow_ChangementStatutEquipSin</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>TY</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>barcodeString</name>
            <value>
                <elementReference>Saisie_sinistre</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>selectedRT</name>
            <value>
                <elementReference>EquipSinRT</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>setFinalStatus</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <name>Update_EquipSin</name>
        <label>Update EquipSin</label>
        <locationX>1731</locationX>
        <locationY>527</locationY>
        <actionName>Flow_ChangementStatutEquipSin</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Fail_because_a_bad_RT</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>barcodeString</name>
            <value>
                <elementReference>Saisie_sinistre</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>newStatus</name>
            <value>
                <elementReference>EquipSin_Status.controllingPkValue</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>newSubStatus</name>
            <value>
                <elementReference>EquipSin_Status.dependantPkValue</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>selectedRT</name>
            <value>
                <elementReference>EquipSinRT</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>50.0</apiVersion>
    <decisions>
        <name>Besoin_de_g_n_rer_le_bordereau_de_livraison</name>
        <label>Besoin de générer le bordereau de livraison ?</label>
        <locationX>1980</locationX>
        <locationY>389</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Oui_g_n_rez_s_il_vous_pla_t</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GenererBordereau</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Bordereau_de_livraison</targetReference>
            </connector>
            <label>Oui, générez s&apos;il vous plaît</label>
        </rules>
    </decisions>
    <decisions>
        <name>Fail_because_a_bad_RT</name>
        <label>Fail because a bad RT ?</label>
        <locationX>1847</locationX>
        <locationY>529</locationY>
        <defaultConnector>
            <targetReference>TY</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Nope</defaultConnectorLabel>
        <rules>
            <name>Yes_it_is</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Update_EquipSin.isErrorRT</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>BadRTErrScr</targetReference>
            </connector>
            <label>Yes, it is</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_there_any_barcode_scanned</name>
        <label>Is there any barcode scanned ?</label>
        <locationX>1136</locationX>
        <locationY>536</locationY>
        <defaultConnector>
            <targetReference>Check_status_first_please</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Nope_no_barcode</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_current_EquipSin_status.barcodeCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_current_EquipSin_status.barcodeCount</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ErrScr</targetReference>
            </connector>
            <label>Nope, no barcode</label>
        </rules>
    </decisions>
    <decisions>
        <name>Keep_going_with_the_update</name>
        <label>Keep going with the update ?</label>
        <locationX>1443</locationX>
        <locationY>529</locationY>
        <defaultConnector>
            <targetReference>Changement_status</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yup_let_s_go</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Valider_votre_op_ration</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Shift_to_a_final_status</targetReference>
            </connector>
            <label>Yup, let&apos;s go</label>
        </rules>
    </decisions>
    <decisions>
        <name>Shift_to_a_final_status</name>
        <label>Shift to a final status ?</label>
        <locationX>1590</locationX>
        <locationY>531</locationY>
        <defaultConnector>
            <targetReference>Update_EquipSin</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Nope</defaultConnectorLabel>
        <rules>
            <name>Yup_let_s_go_final</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SetFinalStatus</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Jump_to_the_final_status</targetReference>
            </connector>
            <label>Yup, let&apos;s go final</label>
        </rules>
    </decisions>
    <description>25/06/2021 SFAMI-2006 v2</description>
    <dynamicChoiceSets>
        <name>EquipSinRTList</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>1 AND (2 OR 3)</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Equipement_sinistre__c</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Equipement_vole_perdu</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Equipement_a_reparer</stringValue>
            </value>
        </filters>
        <limit>4</limit>
        <object>RecordType</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <formulas>
        <name>updatedCount</name>
        <dataType>Number</dataType>
        <expression>IF(
    ISNULL({!Update_EquipSin.barcodeCount}), 
    {!Jump_to_the_final_status.barcodeCount}, 
    {!Update_EquipSin.barcodeCount}
)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>UserBusinessProfile</name>
        <dataType>String</dataType>
        <expression>TEXT({!$User.BusinessProfile__c})</expression>
    </formulas>
    <interviewLabel>Changement statut Equipement sinistr {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Changement statut Equipement sinistré</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <screens>
        <name>BadRTErrScr</name>
        <label>BadRTErrScr</label>
        <locationX>1852</locationX>
        <locationY>320</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Changement_status</targetReference>
        </connector>
        <fields>
            <name>BadRTErrMsg</name>
            <fieldText>&lt;p&gt;Le statut que vous avez choisi ne convient pas au type d&apos;équipement choisi. Merci de vérifier. &lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Bordereau_de_livraison</name>
        <label>Bordereau de livraison</label>
        <locationX>1987</locationX>
        <locationY>190</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>bordereau</name>
            <fieldText>&lt;p&gt;Naviguer vers le &lt;a href=&quot;/apex/Sinistre_BordereauEquipementSinistre?newStatus={!EquipSin_Status.controllingPkValue}&amp;amp;newSousStatus={!EquipSin_Status.dependantPkValue}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;bordereau généré&lt;/a&gt;.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Changement_status</name>
        <label>Changement status</label>
        <locationX>1017</locationX>
        <locationY>199</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Get_current_EquipSin_status</targetReference>
        </connector>
        <fields>
            <name>EquipSinRT</name>
            <choiceReferences>EquipSinRTList</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Type d&apos;équipement à mettre à jour</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Saisie_sinistre</name>
            <fieldText>Saisie sinistre</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>EquipSin_Status</name>
            <extensionName>c:Flow_HandleDependantPicklist</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>controllingPkName</name>
                <value>
                    <stringValue>Statut_equipement__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>controllingPkLabel</name>
                <value>
                    <stringValue>Statut cible</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>dependantPkName</name>
                <value>
                    <stringValue>Sous_statut__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>dependantPkLabel</name>
                <value>
                    <stringValue>Sous-statut</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectName</name>
                <value>
                    <stringValue>Equipement_sinistre__c</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>UserBusinessProfile</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>AgentExpedition</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>UserBusinessProfile</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>ManagerExpedition</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SetFinalStatus</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <booleanValue>false</booleanValue>
            </defaultValue>
            <fieldText>Basculer dans le statut final : Remise transporteur / Conservé</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>UserBusinessProfile</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>Expedition</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>UserBusinessProfile</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>Global</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>UserBusinessProfile</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>Reparation</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Check_status_first_please</name>
        <label>Check status first please</label>
        <locationX>1328</locationX>
        <locationY>534</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Keep_going_with_the_update</targetReference>
        </connector>
        <fields>
            <name>currentStatutMsg</name>
            <fieldText>&lt;p&gt;{!Get_current_EquipSin_status.currentStatusString}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>TargetStatusMsg</name>
            <fieldText>&lt;p&gt;Vous souhaitez basculer ces équipements dans le statut {!EquipSin_Status.controllingPkValue} {!EquipSin_Status.dependantPkValue}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>SetFinalStatus</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>FinalStatusMsg</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Vous souhaitez basculer ces équipements dans les statuts finaux correspondants.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>SetFinalStatus</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Valider_votre_op_ration</name>
            <dataType>Boolean</dataType>
            <fieldText>Valider votre opération ?</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_current_EquipSin_status.currentStatusString</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Pas de statut mappé</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>GenerateSlipsPreValidationDisplayBox</name>
            <fieldText>&lt;p&gt;Genrer le bordereau avant validation &lt;a href=&quot;/apex/Sinistre_BordereauEquipementSinistre?numSinistre={!Saisie_sinistre}&amp;amp;newStatus={!EquipSin_Status.controllingPkValue}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;ici&lt;/a&gt;.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ErrScr</name>
        <label>ErrScr</label>
        <locationX>1015</locationX>
        <locationY>371</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Changement_status</targetReference>
        </connector>
        <fields>
            <name>ErrMsg</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Il n&apos;y a pas d&apos;équipement associé aux sinistres saisis / avec le record type spécifié.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>TY</name>
        <label>TY</label>
        <locationX>1988</locationX>
        <locationY>534</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Besoin_de_g_n_rer_le_bordereau_de_livraison</targetReference>
        </connector>
        <fields>
            <name>TYMessageSuccess</name>
            <fieldText>&lt;p&gt;{!updatedCount} équipements renseignés ont changé de statut.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>GenererBordereau</name>
            <dataType>Boolean</dataType>
            <fieldText>Générer le bordereau de livraison ?</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>889</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>Changement_status</targetReference>
        </connector>
    </start>
    <status>Active</status>
</Flow>
