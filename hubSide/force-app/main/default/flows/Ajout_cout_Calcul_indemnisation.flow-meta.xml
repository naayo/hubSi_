<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>49.0</apiVersion>
    <assignments>
        <name>Assign_CountEquipSin</name>
        <label>Assign CountEquipSin</label>
        <locationX>264</locationX>
        <locationY>518</locationY>
        <assignmentItems>
            <assignToReference>countEquipSin</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_over_the_EquipSin</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_EquipSin</name>
        <label>Assign EquipSin</label>
        <locationX>264</locationX>
        <locationY>974</locationY>
        <assignmentItems>
            <assignToReference>equipSin</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_over_the_EquipSin_again</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_over_the_EquipSin_again</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Quel_EquipSin_to_assign</name>
        <label>Quel EquipSin to assign ?</label>
        <locationX>396</locationX>
        <locationY>854</locationY>
        <defaultConnector>
            <targetReference>Loop_over_the_EquipSin_again</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Let_s_assign_this_one</name>
            <conditionLogic>(1 AND 2) OR 3</conditionLogic>
            <conditions>
                <leftValueReference>countEquipSin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>2.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_over_the_EquipSin_again.RecordType.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Equipement_a_reparer</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>countEquipSin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_EquipSin</targetReference>
            </connector>
            <label>Let&apos;s assign this one</label>
        </rules>
    </decisions>
    <decisions>
        <name>Quelle_indemnisation_choisie</name>
        <label>Quelle indemnisation choisie ?</label>
        <locationX>176</locationX>
        <locationY>1406</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Primes</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>CoutTypePicklist.topValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Primes</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Indemnisation_Prime_Echange</targetReference>
            </connector>
            <label>Primes</label>
        </rules>
        <rules>
            <name>Echange</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CoutTypePicklist.topValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Echange</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Indemnisation_Prime_Echange</targetReference>
            </connector>
            <label>Echange</label>
        </rules>
        <rules>
            <name>Reparation</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>CoutTypePicklist.topValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Réparation</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Indemnisation_reparation</targetReference>
            </connector>
            <label>Reparation</label>
        </rules>
        <rules>
            <name>ReglementClient</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>CoutTypePicklist.topValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Règlement par le client</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>MontantPaiement</targetReference>
            </connector>
            <label>Règlement par le client</label>
        </rules>
    </decisions>
    <description>TSC 06072021 : reparation subflow</description>
    <formulas>
        <name>IndemnNegativeAmount</name>
        <dataType>Currency</dataType>
        <expression>{!MontantFranchise} *  -1</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>Ajout coût Calcul indemnisation {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Ajout coût Calcul indemnisation</label>
    <loops>
        <name>Loop_over_the_EquipSin</name>
        <label>Loop over the EquipSin</label>
        <locationX>176</locationX>
        <locationY>398</locationY>
        <collectionReference>GetAllEquipSin</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_CountEquipSin</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Loop_over_the_EquipSin_again</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_over_the_EquipSin_again</name>
        <label>Loop over the EquipSin again !</label>
        <locationX>176</locationX>
        <locationY>734</locationY>
        <collectionReference>GetAllEquipSin</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Quel_EquipSin_to_assign</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Indemnisations</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>CalculIndemnReglementClient</name>
        <label>CalculIndemn règlement client</label>
        <locationX>352</locationX>
        <locationY>1646</locationY>
        <connector>
            <targetReference>Ajout_cout</targetReference>
        </connector>
        <inputAssignments>
            <field>Case__c</field>
            <value>
                <elementReference>Var_CaseId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Cout_choisi__c</field>
            <value>
                <elementReference>CoutTypePicklist.topValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Date_mouvement__c</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Libelle__c</field>
            <value>
                <elementReference>Libelle</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Montant__c</field>
            <value>
                <elementReference>IndemnNegativeAmount</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>CoutTypePicklist.middleValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Sens_mouvement__c</field>
            <value>
                <stringValue>Règlement par le client</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Statut__c</field>
            <value>
                <stringValue>Crée</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type_mouvement__c</field>
            <value>
                <elementReference>CoutTypePicklist.middleValue</elementReference>
            </value>
        </inputAssignments>
        <object>Mouvements_financiers__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Case</name>
        <label>Get Case</label>
        <locationX>176</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetAllEquipSin</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Var_CaseId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetAllEquipSin</name>
        <label>GetAllEquipSin</label>
        <locationX>176</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_over_the_EquipSin</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Sinistre__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Var_CaseId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Equipement_sinistre__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <runInMode>DefaultMode</runInMode>
    <screens>
        <name>Ajout_cout</name>
        <label>Ajout cout</label>
        <locationX>352</locationX>
        <locationY>1766</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>Nouveau_mouvement_financier</name>
            <fieldText>&lt;p&gt;Un nouveau mouvement a été cré&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;é.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Indemnisations</name>
        <label>Indemnisations</label>
        <locationX>176</locationX>
        <locationY>1286</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Quelle_indemnisation_choisie</targetReference>
        </connector>
        <fields>
            <name>CoutTypePicklist</name>
            <extensionName>flowruntime:dependentPicklists</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>dependencyWrapperApiName</name>
                <value>
                    <stringValue>Mouvements_financiers__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>topPicklistApiName</name>
                <value>
                    <stringValue>Cout_choisi__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>middlePicklistApiName</name>
                <value>
                    <stringValue>Type_mouvement__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>topRequired</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>middleRequired</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>Libelle</name>
            <fieldText>Libellé</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>MontantPaiement</name>
        <label>Montant Paiement</label>
        <locationX>352</locationX>
        <locationY>1526</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>CalculIndemnReglementClient</targetReference>
        </connector>
        <fields>
            <name>MontantFranchise</name>
            <dataType>Currency</dataType>
            <fieldText>Montant</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>0</scale>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Case</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>Indemnisation_Prime_Echange</name>
        <label>Indemnisation Prime/Echange</label>
        <locationX>176</locationX>
        <locationY>2102</locationY>
        <flowName>SF_Indemnisation_Prime_Echange</flowName>
        <inputAssignments>
            <name>CaseId</name>
            <value>
                <elementReference>Var_CaseId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>CoutChoisi</name>
            <value>
                <elementReference>CoutTypePicklist.topValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>EquipSinId</name>
            <value>
                <elementReference>equipSin.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>LibelleIndemn</name>
            <value>
                <elementReference>Libelle</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>TypeMouvement</name>
            <value>
                <elementReference>CoutTypePicklist.middleValue</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>Indemnisation_reparation</name>
        <label>Indemnisation réparation</label>
        <locationX>88</locationX>
        <locationY>1526</locationY>
        <flowName>SF_Indemnisation_Reparation</flowName>
        <inputAssignments>
            <name>CaseId</name>
            <value>
                <elementReference>Var_CaseId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Cout_choisi</name>
            <value>
                <elementReference>CoutTypePicklist.topValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>EqpmSinId</name>
            <value>
                <elementReference>equipSin.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Libelle</name>
            <value>
                <elementReference>Libelle</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Type_mouvement</name>
            <value>
                <elementReference>CoutTypePicklist.middleValue</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <name>CalculIndemnToDeleteList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Mouvements_financiers__c</objectType>
    </variables>
    <variables>
        <name>countEquipSin</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>equipSin</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Equipement_sinistre__c</objectType>
    </variables>
    <variables>
        <name>Var_CaseId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
