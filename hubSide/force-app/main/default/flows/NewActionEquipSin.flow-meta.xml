<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <actionCalls>
        <name>TriggerCalloutOnReservedStock</name>
        <label>Appel Stock de Réserve</label>
        <locationX>4802</locationX>
        <locationY>878</locationY>
        <actionName>EquipementSinistreTriggerHelper</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>eqsId</name>
            <value>
                <elementReference>Get_EquipSin.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>51.0</apiVersion>
    <assignments>
        <name>Assign_Commentaire</name>
        <label>Assign Commentaire</label>
        <locationX>2558</locationX>
        <locationY>1934</locationY>
        <assignmentItems>
            <assignToReference>Get_Historique.Commentaire__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Commentaire</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Statut_Historique</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_EquipSin_Blocked_Exchange</name>
        <label>Assign EquipSin Blocked Exchange</label>
        <locationX>4274</locationX>
        <locationY>878</locationY>
        <assignmentItems>
            <assignToReference>TaskToCreate.ActivityDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Expédition bloquée suite impayé/opposition</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Need_to_update_EquipSin</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_EquipSin_Commande</name>
        <label>Assign EquipSin Commande</label>
        <locationX>842</locationX>
        <locationY>878</locationY>
        <assignmentItems>
            <assignToReference>Get_EquipSin.Statut_equipement__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>En commande pièces</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>isEquipSinUpdated</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Task_Commande</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_EquipSin_Irreparable</name>
        <label>Assign EquipSin Irreparable</label>
        <locationX>578</locationX>
        <locationY>758</locationY>
        <assignmentItems>
            <assignToReference>Get_EquipSin.Statut_equipement__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Irréparable - A retourner</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_EquipSin.Sous_statut__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>En attente GS</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>isEquipSinUpdated</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Task_Irreparable</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_EquipSin_Launch_Expedition</name>
        <label>Assign EquipSin Lancement Expédition</label>
        <locationX>4010</locationX>
        <locationY>998</locationY>
        <assignmentItems>
            <assignToReference>Get_EquipSin.Statut_equipement__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Expédition client</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_EquipSin.Sous_statut__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Préparation</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>isEquipSinUpdated</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Need_to_update_EquipSin</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_EquipSin_Reparable</name>
        <label>Assign EquipSin Reparable</label>
        <locationX>314</locationX>
        <locationY>878</locationY>
        <assignmentItems>
            <assignToReference>Get_EquipSin.Sous_statut__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>En attente GS</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_EquipSin.Valeur_reparation__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_EquipSin.RealCost__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_EquipSin.Statut_equipement__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>En Cours de Réparation</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>isEquipSinUpdated</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_TaskReparable</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_EquipSin_Repare</name>
        <label>Assign EquipSin Reparé</label>
        <locationX>1370</locationX>
        <locationY>758</locationY>
        <assignmentItems>
            <assignToReference>Get_EquipSin.Statut_equipement__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Repare_client_Expedition</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_EquipSin.Sous_statut__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>A sortir - Retour client</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>isEquipSinUpdated</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Task_Repare</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Task_Autre</name>
        <label>Assign Task Autre</label>
        <locationX>5330</locationX>
        <locationY>758</locationY>
        <assignmentItems>
            <assignToReference>TaskToCreate.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Task_TypeAction.controllingPkValue</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Affectation__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>TC Classique</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetQueueGS.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Need_to_update_EquipSin</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Task_Commande</name>
        <label>Assign Task Commande</label>
        <locationX>842</locationX>
        <locationY>998</locationY>
        <assignmentItems>
            <assignToReference>TaskToCreate.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Commande de pièces</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_EquipSin.Sinistre__r.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Need_to_update_EquipSin</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Task_Deverrouillage</name>
        <label>Assign Task Deverrouillage</label>
        <locationX>1898</locationX>
        <locationY>758</locationY>
        <assignmentItems>
            <assignToReference>TaskToCreate.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Déverrouillage terminal</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Affectation__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>TC Classique</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Queue_TC.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Sinistre_dever</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Task_Geolocalisation</name>
        <label>Assign Task Géolocalisation</label>
        <locationX>1634</locationX>
        <locationY>758</locationY>
        <assignmentItems>
            <assignToReference>TaskToCreate.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Désactiver la géolocalisation</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Affectation__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>TC Classique</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Queue_TC.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Sinistre_geoloc</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Task_Intervention_Request_GS</name>
        <label>Assign Task Intervention Request GS</label>
        <locationX>2162</locationX>
        <locationY>878</locationY>
        <assignmentItems>
            <assignToReference>TaskToCreate.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Action demandé par la {!RepairOrLogistique}</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.WhatId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_EquipSin.Sinistre__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Type_Action__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>InterventionRequestGS</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetSinistreInterventionRequestGS.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Need_to_update_EquipSin</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Task_Intervention_Request_GS_0</name>
        <label>Assign Task Intervention Request GS</label>
        <locationX>2690</locationX>
        <locationY>758</locationY>
        <assignmentItems>
            <assignToReference>TaskToCreate.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Action demandé par la {!RepairOrLogistique}</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.WhatId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_EquipSin.Sinistre__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Type_Action__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>InterventionRequestTC</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Queue_TC.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Need_to_update_EquipSin</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Task_Irreparable</name>
        <label>Assign Task Irreparable</label>
        <locationX>578</locationX>
        <locationY>878</locationY>
        <assignmentItems>
            <assignToReference>TaskToCreate.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Equipement irréparable</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_EquipSin.Sinistre__r.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Need_to_update_EquipSin</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Task_Note</name>
        <label>Assign Task Note</label>
        <locationX>2426</locationX>
        <locationY>758</locationY>
        <assignmentItems>
            <assignToReference>TaskToCreate.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Note {!RepairOrLogistique}</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.WhatId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_EquipSin.Sinistre__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Type_Action__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Note</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_Histo_0_0</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Task_Repare</name>
        <label>Assign Task Reparé</label>
        <locationX>1370</locationX>
        <locationY>878</locationY>
        <assignmentItems>
            <assignToReference>TaskToCreate.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Equipement Réparé</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Queue_TC.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.WhatId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_EquipSin.Sinistre__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.ActivityDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>dueDateEquipSin</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Need_to_update_EquipSin</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_TaskReparable</name>
        <label>Assign TaskReparable</label>
        <locationX>314</locationX>
        <locationY>998</locationY>
        <assignmentItems>
            <assignToReference>TaskToCreate.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>EquipReparable_TaskSubject</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_EquipSin.Sinistre__r.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Need_to_update_EquipSin</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_TaskToCreate</name>
        <label>Assign TaskToCreate</label>
        <locationX>2624</locationX>
        <locationY>2726</locationY>
        <assignmentItems>
            <assignToReference>TaskToCreate.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VarRT</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.WhatId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_EquipSin.Sinistre__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Commentaire</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskToCreate.Type_Action__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Task_TypeAction.controllingPkValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_Task</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>CheckDamagedEquipStatus</name>
        <label>Vérification Statut Equipement Sinistré</label>
        <locationX>4670</locationX>
        <locationY>758</locationY>
        <defaultConnector>
            <targetReference>TriggerCalloutOnReservedStock</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Statut Egal En commande Pièces</defaultConnectorLabel>
        <rules>
            <name>StatusDifferentOrder</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_EquipSin.Statut_equipement__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>En commmande</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ScreenWrongStatus</targetReference>
            </connector>
            <label>Statut Différent de En commande Pièces</label>
        </rules>
    </decisions>
    <decisions>
        <name>ChecksForLaunchExpedition</name>
        <label>Vérification lancement expédition</label>
        <locationX>3482</locationX>
        <locationY>878</locationY>
        <defaultConnector>
            <targetReference>Assign_EquipSin_Launch_Expedition</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>adressError</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_EquipSin.Adresse_de_livraison__c</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <connector>
                <targetReference>CreateTaskAddressError</targetReference>
            </connector>
            <label>addresse erreur</label>
        </rules>
        <rules>
            <name>ExchangeStatusError</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_EquipSin.Statut_equipement__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>En destockage</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_EquipSin.Record_Type_Name__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Equipement_vole_perdu</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ScreenExchangeStatusError</targetReference>
            </connector>
            <label>Echange statut erreur</label>
        </rules>
        <rules>
            <name>CustomerRequirements</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetSinistre.Attente_client_final__c</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <connector>
                <targetReference>CreateTaskCustomerRequirementsError</targetReference>
            </connector>
            <label>attente client</label>
        </rules>
        <rules>
            <name>ReparationStatusError</name>
            <conditionLogic>(1 AND 2) OR (1 AND 5 AND 3 AND 4)</conditionLogic>
            <conditions>
                <leftValueReference>Get_EquipSin.Record_Type_Name__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Equipement_a_reparer</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_EquipSin.Statut_equipement__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Expédition client</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_EquipSin.Sous_statut__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>A retourner PSM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_EquipSin.Sous_statut__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Réceptionné - A expédier</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_EquipSin.Statut_equipement__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Expédition client</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ScreenReparationStatusError</targetReference>
            </connector>
            <label>Réparation statut erreur</label>
        </rules>
    </decisions>
    <decisions>
        <name>Cout_reel_null</name>
        <label>Coût réel = 0</label>
        <locationX>182</locationX>
        <locationY>758</locationY>
        <defaultConnector>
            <targetReference>Assign_EquipSin_Reparable</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Cout_reel_egal_0</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_EquipSin.RealCost__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_EquipSin.RealCost__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CoutReelNulErrScr</targetReference>
            </connector>
            <label>Cout réel = 0 ou null</label>
        </rules>
    </decisions>
    <decisions>
        <name>EquipSin_en_cours_d_indemn</name>
        <label>EquipSin en cours d&apos;indemn ?</label>
        <locationX>974</locationX>
        <locationY>758</locationY>
        <defaultConnector>
            <targetReference>SinistreNonEnCoursDIndemnErrScr</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yup_en_cours_d_indemn</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_EquipSin.Sinistre__r.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>En cours d&apos;indemnisation</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_EquipSin_Commande</targetReference>
            </connector>
            <label>Yup, en cours d&apos;indemn</label>
        </rules>
    </decisions>
    <decisions>
        <name>Need_to_create_task</name>
        <label>Need to create task ?</label>
        <locationX>2756</locationX>
        <locationY>2486</locationY>
        <defaultConnectorLabel>Don&apos;t create Task</defaultConnectorLabel>
        <rules>
            <name>DEC_Create_Task</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Task_TypeAction.controllingPkValue</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>PrintDeliveryNote</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Task_TypeAction.controllingPkValue</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>LaunchExpedition</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Task_RT</targetReference>
            </connector>
            <label>Create Task</label>
        </rules>
    </decisions>
    <decisions>
        <name>Need_to_update_EquipSin</name>
        <label>Need to update EquipSin ?</label>
        <locationX>2756</locationX>
        <locationY>1574</locationY>
        <defaultConnector>
            <targetReference>Need_to_create_task</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yup_please_update</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isEquipSinUpdated</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_EquipSin</targetReference>
            </connector>
            <label>Yup, please update</label>
        </rules>
    </decisions>
    <decisions>
        <name>Statut_Historique</name>
        <label>Statut != Historique ?</label>
        <locationX>2558</locationX>
        <locationY>2054</locationY>
        <defaultConnector>
            <targetReference>Update_Histo</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Statut_different</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>HistoName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Historique.Name</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_Histo</targetReference>
            </connector>
            <label>Statut différent</label>
        </rules>
    </decisions>
    <decisions>
        <name>Statut_SousStatut</name>
        <label>Statut-SousStatut</label>
        <locationX>2756</locationX>
        <locationY>638</locationY>
        <defaultConnector>
            <targetReference>Assign_Task_Autre</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Equipement_Reparable</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Task_TypeAction.controllingPkValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>RepairableEquipment</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Cout_reel_null</targetReference>
            </connector>
            <label>Equipement Réparable</label>
        </rules>
        <rules>
            <name>Equipement_Irreparable</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Task_TypeAction.controllingPkValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IrreparableEquipment</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_EquipSin_Irreparable</targetReference>
            </connector>
            <label>Equipement Irréparable</label>
        </rules>
        <rules>
            <name>Commande_pieces</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Task_TypeAction.controllingPkValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>OrderingParts</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>EquipSin_en_cours_d_indemn</targetReference>
            </connector>
            <label>Commande de pièces</label>
        </rules>
        <rules>
            <name>Equipement_Repare</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Task_TypeAction.controllingPkValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EquipmentRepaired</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_EquipSin_Repare</targetReference>
            </connector>
            <label>Equipement Réparé</label>
        </rules>
        <rules>
            <name>Geolocalisation</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Task_TypeAction.controllingPkValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>GeolocalisationDeactivation</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Task_Geolocalisation</targetReference>
            </connector>
            <label>Géolocalisation</label>
        </rules>
        <rules>
            <name>Deverrouillage_terminal</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Task_TypeAction.controllingPkValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TerminalUnlock</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Task_Deverrouillage</targetReference>
            </connector>
            <label>Déverrouillage terminal</label>
        </rules>
        <rules>
            <name>InterventionRequestGS</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Task_TypeAction.controllingPkValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>InterventionRequestGS</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetSinistreInterventionRequestGS</targetReference>
            </connector>
            <label>Demande intervention GS</label>
        </rules>
        <rules>
            <name>Note</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Task_TypeAction.controllingPkValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Note</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Task_Note</targetReference>
            </connector>
            <label>Note</label>
        </rules>
        <rules>
            <name>InterventionRequestTC</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Task_TypeAction.controllingPkValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>InterventionRequestTC</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Task_Intervention_Request_GS_0</targetReference>
            </connector>
            <label>Demande Intervention TC</label>
        </rules>
        <rules>
            <name>LaunchExpedition</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Task_TypeAction.controllingPkValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LaunchExpedition</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetSinistre</targetReference>
            </connector>
            <label>Lancement Expedition</label>
        </rules>
        <rules>
            <name>BlockedExchange</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Task_TypeAction.controllingPkValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>BlockedExchange</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetSinistreBlockedExchange</targetReference>
            </connector>
            <label>Expédition Bloquée</label>
        </rules>
        <rules>
            <name>DestockingOnReservedStock</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Task_TypeAction.controllingPkValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>DestockingOnReservedStock</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CheckDamagedEquipStatus</targetReference>
            </connector>
            <label>Sélection Destockage sur Stock Réservé</label>
        </rules>
        <rules>
            <name>PrintDeliveryNote</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Task_TypeAction.controllingPkValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PrintDeliveryNote</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UPD_Sinistre</targetReference>
            </connector>
            <label>Imprimer bordereau</label>
        </rules>
    </decisions>
    <description>Run as System access all data</description>
    <dynamicChoiceSets>
        <name>TypeAction</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Actiontype__c</picklistField>
        <picklistObject>Task</picklistObject>
    </dynamicChoiceSets>
    <formulas>
        <name>dueDateEquipSin</name>
        <dataType>Date</dataType>
        <expression>Today()+2</expression>
    </formulas>
    <formulas>
        <name>EquipReparable_TaskSubject</name>
        <dataType>String</dataType>
        <expression>&apos;Devis réparation montant : &apos; + TEXT({!Get_EquipSin.RealCost__c})</expression>
    </formulas>
    <formulas>
        <name>FOR_DeliveryAddress</name>
        <dataType>String</dataType>
        <expression>{!Get_EquipSin.street__c} &amp; BR() &amp; {!Get_EquipSin.postalCode__c} &amp; &quot; &quot; &amp; {!Get_EquipSin.city__c} &amp; BR() &amp; {!Get_EquipSin.country__c}</expression>
    </formulas>
    <formulas>
        <name>HistoName</name>
        <dataType>String</dataType>
        <expression>TEXT ({!Get_EquipSin.Statut_equipement__c})+&quot; &quot;+TEXT ({!Get_EquipSin.Sous_statut__c})</expression>
    </formulas>
    <formulas>
        <name>RepairOrLogistique</name>
        <dataType>String</dataType>
        <expression>IF(CONTAINS(TEXT({!$User.BusinessProfile__c}), &quot;Reparation&quot;), &quot;réparation&quot;, &quot;logistique&quot;)</expression>
    </formulas>
    <interviewLabel>Nouvelle action {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Nouvelle action</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>CRE_TaskPourPDFBordereau</name>
        <label>CRE_Task pour PDF bordereau</label>
        <locationX>5066</locationX>
        <locationY>998</locationY>
        <connector>
            <targetReference>GET_TaskPDF</targetReference>
        </connector>
        <inputAssignments>
            <field>Canal_communication__c</field>
            <value>
                <stringValue>Print</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Code_template__c</field>
            <value>
                <stringValue>SIN_035_A</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_Groups_File_d_attente_logistique.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>Get_EquipSin.Sinistre__c</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Histo</name>
        <label>Create Histo</label>
        <locationX>2426</locationX>
        <locationY>2174</locationY>
        <connector>
            <targetReference>Need_to_create_task</targetReference>
        </connector>
        <inputAssignments>
            <field>Commentaire__c</field>
            <value>
                <elementReference>Commentaire</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Equipement_sinistre__c</field>
            <value>
                <elementReference>Get_EquipSin.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>HistoName</elementReference>
            </value>
        </inputAssignments>
        <object>Name__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Histo_0_0</name>
        <label>Create Histo</label>
        <locationX>2426</locationX>
        <locationY>878</locationY>
        <connector>
            <targetReference>Need_to_update_EquipSin</targetReference>
        </connector>
        <inputAssignments>
            <field>Commentaire__c</field>
            <value>
                <elementReference>Commentaire</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Equipement_sinistre__c</field>
            <value>
                <elementReference>Get_EquipSin.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <stringValue>Note {!RepairOrLogistique}</stringValue>
            </value>
        </inputAssignments>
        <object>Name__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Task</name>
        <label>Create Task</label>
        <locationX>2624</locationX>
        <locationY>2846</locationY>
        <inputReference>TaskToCreate</inputReference>
    </recordCreates>
    <recordCreates>
        <name>CreateTaskAddressError</name>
        <label>Create Task Address Error</label>
        <locationX>2954</locationX>
        <locationY>998</locationY>
        <connector>
            <targetReference>ScreenAddressError</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_Queue_TC.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Adresse de livraison manquante sur l&apos;équipement sinistré</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type_Action__c</field>
            <value>
                <stringValue>Autres</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>GetSinistre.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>CreateTaskCustomerRequirementsError</name>
        <label>Create Task Customer Requirements Error</label>
        <locationX>3482</locationX>
        <locationY>998</locationY>
        <connector>
            <targetReference>ScreenCustomerRequirementsError</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>GetQueueGS.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Actions clients en attente dans le sinistre</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type_Action__c</field>
            <value>
                <stringValue>Autres</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>GetSinistre.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_EquipSin</name>
        <label>Get EquipSin</label>
        <locationX>2756</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Statut</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarEquipsin</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Equipement_sinistre__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Groups_File_d_attente_logistique</name>
        <label>Get Queue File d&apos;attente logistique</label>
        <locationX>5066</locationX>
        <locationY>878</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CRE_TaskPourPDFBordereau</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Fil_d_attente_logistique</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Historique</name>
        <label>Get Historique</label>
        <locationX>2558</locationX>
        <locationY>1814</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Commentaire</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Equipement_sinistre__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarEquipsin</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Name__c</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_TC</name>
        <label>Get Queue TC</label>
        <locationX>2756</locationX>
        <locationY>398</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetQueueGS</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dispatch_teleconseiller</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Task_RT</name>
        <label>Get Task RT</label>
        <locationX>2624</locationX>
        <locationY>2606</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_TaskToCreate</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Sinistre_Task_Action</stringValue>
            </value>
        </filters>
        <object>RecordType</object>
        <outputAssignments>
            <assignToReference>VarRT</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>GET_TaskPDF</name>
        <label>GET_TaskPDF</label>
        <locationX>5066</locationX>
        <locationY>1118</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_task_PDF_status</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CRE_TaskPourPDFBordereau</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Task</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetQueueGS</name>
        <label>Get Queue GS</label>
        <locationX>2756</locationX>
        <locationY>518</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Statut_SousStatut</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dispatch_Sinistre</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetSinistre</name>
        <label>Get Sinistre</label>
        <locationX>3482</locationX>
        <locationY>758</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ChecksForLaunchExpedition</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_EquipSin.Sinistre__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetSinistreBlockedExchange</name>
        <label>Get Sinistre</label>
        <locationX>4274</locationX>
        <locationY>758</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_EquipSin_Blocked_Exchange</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_EquipSin.Sinistre__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetSinistreInterventionRequestGS</name>
        <label>Get Sinistre</label>
        <locationX>2162</locationX>
        <locationY>758</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Task_Intervention_Request_GS</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_EquipSin.Sinistre__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>UPD_Sinistre</name>
        <label>UPD_Sinistre</label>
        <locationX>5066</locationX>
        <locationY>758</locationY>
        <connector>
            <targetReference>Get_Groups_File_d_attente_logistique</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_EquipSin.Sinistre__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>DeliveryAddress__c</field>
            <value>
                <elementReference>FOR_DeliveryAddress</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>TECH_ChosenModel__c</field>
            <value>
                <elementReference>Get_EquipSin.ChooseEqp__r.Name</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>TECH_NewEqpmClientIMEI__c</field>
            <value>
                <elementReference>Get_EquipSin.SerieNumberEC__c</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_EquipSin</name>
        <label>Update EquipSin</label>
        <locationX>2558</locationX>
        <locationY>1694</locationY>
        <connector>
            <targetReference>Get_Historique</targetReference>
        </connector>
        <inputReference>Get_EquipSin</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Histo</name>
        <label>Update Histo</label>
        <locationX>2690</locationX>
        <locationY>2174</locationY>
        <connector>
            <targetReference>Need_to_create_task</targetReference>
        </connector>
        <inputReference>Get_Historique</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Sinistre_dever</name>
        <label>Update Sinistre</label>
        <locationX>1898</locationX>
        <locationY>878</locationY>
        <connector>
            <targetReference>Need_to_update_EquipSin</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_EquipSin.Sinistre__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Autre_attente__c</field>
            <value>
                <stringValue>Oui</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Sinistre_geoloc</name>
        <label>Update Sinistre</label>
        <locationX>1634</locationX>
        <locationY>878</locationY>
        <connector>
            <targetReference>Need_to_update_EquipSin</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_EquipSin.Sinistre__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Autre_attente__c</field>
            <value>
                <stringValue>Oui</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_task_PDF_status</name>
        <label>Update task PDF status</label>
        <locationX>5066</locationX>
        <locationY>1238</locationY>
        <connector>
            <targetReference>SCR_Bordereau_dispo</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GET_TaskPDF.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <object>Task</object>
    </recordUpdates>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <screens>
        <name>CoutReelNulErrScr</name>
        <label>Cout réel = 0</label>
        <locationX>50</locationX>
        <locationY>878</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>CoutReelNulErrMsg</name>
            <fieldText>&lt;p&gt;L&apos;action est refusée car le coût réel de votre équipement sinistré est nul.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>SCR_Bordereau_dispo</name>
        <label>SCR_Bordereau dispo</label>
        <locationX>5066</locationX>
        <locationY>1358</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Need_to_update_EquipSin</targetReference>
        </connector>
        <fields>
            <name>TXT_BordereauDispo</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;Le PDF est disponible dans l&apos;onglet &quot;Fichier&quot; de la tâche créée : {!TXT_TaskPDF_Link} &lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ScreenAddressError</name>
        <label>Adresse non renseignée</label>
        <locationX>2954</locationX>
        <locationY>1118</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>AddressErrorMessage</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;L&apos;adresse du client n&apos;est pas renseignée sur l&apos;équipement sinistré.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ScreenCustomerRequirementsError</name>
        <label>Attente client en cours</label>
        <locationX>3482</locationX>
        <locationY>1118</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>CustomerRequirementsErrorMessage</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;Il y a encore des actions clients en attente dans le sinistre.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ScreenExchangeStatusError</name>
        <label>Echange Statut incorrect</label>
        <locationX>3218</locationX>
        <locationY>998</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>StatusErrorMessageEchange</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;L&apos;équipement sinistré n&apos;a pas le statut &lt;/span&gt;&lt;b style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;En déstockage&lt;/b&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ScreenReparationStatusError</name>
        <label>Réparation Statut incorrect</label>
        <locationX>3746</locationX>
        <locationY>998</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Need_to_update_EquipSin</targetReference>
        </connector>
        <fields>
            <name>StatusErrorMessageReparation_0</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;L&apos;équipement sinistré n&apos;a pas le bon statut / sous-statut. Le statut doit être &lt;/span&gt;&lt;b style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Expédition Client&lt;/b&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;. Le sous-statut doit être &lt;/span&gt;&lt;b style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;à retourner PSM &lt;/b&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;ou &lt;/span&gt;&lt;b style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Réceptionné - A expédier.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_EquipSin.Record_Type_Name__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Equipement_vole_perdu</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ScreenWrongStatus</name>
        <label>Mauvais Status</label>
        <locationX>4538</locationX>
        <locationY>878</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorMessageWrongStatus</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 153, 0);&quot;&gt;Le statut de l&apos;équipement sinistré ne vous permet pas de déclencher un déstockage sur le stock de réserve. Pour ce faire le statut doit être à &quot;En commande pièces&quot;.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>SinistreNonEnCoursDIndemnErrScr</name>
        <label>Error screen</label>
        <locationX>1106</locationX>
        <locationY>878</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>SinistreNonEnCoursDIndemnErrMsg</name>
            <fieldText>&lt;p&gt;Votre sinistre n&apos;est pas en cours d&apos;indemnisation. Ce choix n&apos;est donc pas possible. &lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Statut</name>
        <label>Statut</label>
        <locationX>2756</locationX>
        <locationY>278</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Get_Queue_TC</targetReference>
        </connector>
        <fields>
            <name>Task_TypeAction</name>
            <extensionName>c:Flow_HandleDependantPicklist</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>controllingPkName</name>
                <value>
                    <stringValue>Type_Action__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>controllingPkLabel</name>
                <value>
                    <stringValue>Choix</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectName</name>
                <value>
                    <stringValue>Task</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>Commentaire</name>
            <dataType>String</dataType>
            <fieldText>Commentaire</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Task_TypeAction.controllingPkValue</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>PrintDeliveryNote</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>2630</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_EquipSin</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>TXT_TaskPDF_Link</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>&lt;a href=&quot;/{!GET_TaskPDF.Id}&quot; target=&quot;_parent&quot;&gt;bordereau de livraison&lt;/a&gt;</text>
    </textTemplates>
    <variables>
        <name>isEquipSinUpdated</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>ListActionAvailable</name>
        <dataType>Picklist</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>TaskToCreate</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Task</objectType>
    </variables>
    <variables>
        <name>VarEquipsin</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>VarRT</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
