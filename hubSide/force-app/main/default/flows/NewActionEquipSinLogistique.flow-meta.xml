<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>TriggerCalloutOnReservedStock</name>
        <label>Appel Stock de Réserve</label>
        <locationX>314</locationX>
        <locationY>638</locationY>
        <actionName>EquipementSinistreTriggerHelper</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>eqsId</name>
            <value>
                <elementReference>VAR_DamagedEquipmentId</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>51.0</apiVersion>
    <choices>
        <name>BlockedExchange</name>
        <choiceText>Echange Bloqué</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>BlockedExchange</stringValue>
        </value>
    </choices>
    <choices>
        <name>DestockingOnReservedStock</name>
        <choiceText>Destockage sur stock Réservé</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>DestockingOnReservedStock</stringValue>
        </value>
    </choices>
    <choices>
        <name>LaunchExpedition</name>
        <choiceText>Lancement Expédition</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>LaunchExpedition</stringValue>
        </value>
    </choices>
    <decisions>
        <name>CheckDamagedEquipStatus</name>
        <label>Vérification Statut Equipement Sinistré</label>
        <locationX>182</locationX>
        <locationY>518</locationY>
        <defaultConnector>
            <targetReference>TriggerCalloutOnReservedStock</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Statut Egal En commande Pièces</defaultConnectorLabel>
        <rules>
            <name>StatusDifferentOrder</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetDamagedEquip.Statut_equipement__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>En commmande</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ScreenWrongStatus</targetReference>
            </connector>
            <label>Statut Différent de En commande Pièces</label>
        </rules>
    </decisions>
    <decisions>
        <name>ChecksForLaunchExpedition</name>
        <label>Vérification lancement expédition</label>
        <locationX>974</locationX>
        <locationY>638</locationY>
        <defaultConnector>
            <targetReference>UpdateSEquipementStatus</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>adressError</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetDamagedEquipLaunchExpedition.Adresse_de_livraison__c</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <connector>
                <targetReference>GetTCQueue</targetReference>
            </connector>
            <label>addresse erreur</label>
        </rules>
        <rules>
            <name>statusError</name>
            <conditionLogic>(5 AND 1) OR (6 AND (2 OR 3 OR 4))</conditionLogic>
            <conditions>
                <leftValueReference>GetDamagedEquipLaunchExpedition.Statut_equipement__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>En destockage</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetDamagedEquipLaunchExpedition.Statut_equipement__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Expédition client</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetDamagedEquipLaunchExpedition.Sous_statut__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>A retourner PSM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetDamagedEquipLaunchExpedition.Sous_statut__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Réceptionné - A expédier</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetDamagedEquipLaunchExpedition.Record_Type_Name__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Equipement_vole_perdu</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetDamagedEquipLaunchExpedition.Record_Type_Name__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Equipement_vole_perdu</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ScreenStatusError</targetReference>
            </connector>
            <label>statut erreur</label>
        </rules>
        <rules>
            <name>CustomerRequirements</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetSinistre.Attente_client_final__c</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <connector>
                <targetReference>GetGSQueue</targetReference>
            </connector>
            <label>attente client</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckValueSelectedAction</name>
        <label>Vérification Action Sélectionnée</label>
        <locationX>1040</locationX>
        <locationY>278</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>DestockingOnReservedStockSelected</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SelectedAction</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>DestockingOnReservedStock</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetDamagedEquip</targetReference>
            </connector>
            <label>Sélection Destockage sur Stock Réservé</label>
        </rules>
        <rules>
            <name>LaunchExpeditionOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SelectedAction</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>LaunchExpedition</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetDamagedEquipLaunchExpedition</targetReference>
            </connector>
            <label>Lancement Expédition</label>
        </rules>
        <rules>
            <name>BlockedExpeditionOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SelectedAction</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>BlockedExchange</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetDamagedEquipBlockedExchange</targetReference>
            </connector>
            <label>Expédition Bloquée</label>
        </rules>
    </decisions>
    <description>30/06_SFAMI 2107_TSC_Libellé Expédition Bloquée</description>
    <interviewLabel>Nouvelle Action Logistique {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Nouvelle Action Logistique</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>Create_Task</name>
        <label>Create Task</label>
        <locationX>578</locationX>
        <locationY>878</locationY>
        <connector>
            <targetReference>ScreenAddressError</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>TCQueueId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Adresse de livraison manquante sur l&apos;équipement sinistré</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type_Action__c</field>
            <value>
                <stringValue>Autres</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>GetSinistre.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Task_0</name>
        <label>Create Task</label>
        <locationX>1106</locationX>
        <locationY>878</locationY>
        <connector>
            <targetReference>ScreenCustomerRequirementsError</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>GSQueueId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Actions clients en attente dans le sinistre</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type_Action__c</field>
            <value>
                <stringValue>Autres</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>GetSinistre.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Task_0_0</name>
        <label>Create Task</label>
        <locationX>1634</locationX>
        <locationY>638</locationY>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Expédition bloquée suite impayé/opposition</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>GetSinistre_0.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>GetDamagedEquip</name>
        <label>GetDamagedEquip</label>
        <locationX>182</locationX>
        <locationY>398</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckDamagedEquipStatus</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VAR_DamagedEquipmentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Equipement_sinistre__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetDamagedEquipBlockedExchange</name>
        <label>GetDamagedEquip</label>
        <locationX>1634</locationX>
        <locationY>398</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetSinistre_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VAR_DamagedEquipmentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Equipement_sinistre__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetDamagedEquipLaunchExpedition</name>
        <label>GetDamagedEquip</label>
        <locationX>974</locationX>
        <locationY>398</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetSinistre</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VAR_DamagedEquipmentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Equipement_sinistre__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetGSQueue</name>
        <label>Get GS Queue</label>
        <locationX>1106</locationX>
        <locationY>758</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_Task_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dispatch_sinistre</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>GSQueueId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>GetSinistre</name>
        <label>Get Sinistre</label>
        <locationX>974</locationX>
        <locationY>518</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ChecksForLaunchExpedition</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetDamagedEquipLaunchExpedition.Sinistre__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetSinistre_0</name>
        <label>Get Sinistre</label>
        <locationX>1634</locationX>
        <locationY>518</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_Task_0_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetDamagedEquipBlockedExchange.Sinistre__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetTCQueue</name>
        <label>Get TC Queue</label>
        <locationX>578</locationX>
        <locationY>758</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_Task</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dispatch_teleconseiller</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>TCQueueId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordUpdates>
        <name>UpdateSEquipementStatus</name>
        <label>Update equipement status</label>
        <locationX>1370</locationX>
        <locationY>758</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetDamagedEquipLaunchExpedition.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Sous_statut__c</field>
            <value>
                <stringValue>Préparation</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Statut_equipement__c</field>
            <value>
                <stringValue>Expédition client</stringValue>
            </value>
        </inputAssignments>
        <object>Equipement_sinistre__c</object>
    </recordUpdates>
    <screens>
        <name>ScreenAddressError</name>
        <label>Adresse non renseignée</label>
        <locationX>578</locationX>
        <locationY>998</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>AddressErrorMessage</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;L&apos;adresse du client n&apos;est pas renseignée sur l&apos;équipement sinistré.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>ScreenCustomerRequirementsError</name>
        <label>Attente client en cours</label>
        <locationX>1106</locationX>
        <locationY>998</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>CustomerRequirementsErrorMessage</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Il y a encore des actions clients en attente dans le sinistre.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>ScreenSelectAction</name>
        <label>ScreenSelectAction</label>
        <locationX>1040</locationX>
        <locationY>158</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>CheckValueSelectedAction</targetReference>
        </connector>
        <fields>
            <name>SelectedAction</name>
            <choiceReferences>DestockingOnReservedStock</choiceReferences>
            <choiceReferences>LaunchExpedition</choiceReferences>
            <choiceReferences>BlockedExchange</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Action</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>ScreenStatusError</name>
        <label>Statut incorrect</label>
        <locationX>842</locationX>
        <locationY>758</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>StatusErrorMessageEchange</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;L&apos;équipement sinistré n&apos;a pas le statut &lt;/span&gt;&lt;b style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;En déstockage&lt;/b&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetDamagedEquipLaunchExpedition.RecordType.DeveloperName</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Equipement_vole_perdu</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>StatusErrorMessageReparation</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;L&apos;équipement sinistré n&apos;a pas le bon statut / sous-statut. Le statut doit être &lt;/span&gt;&lt;b style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Expédition Client&lt;/b&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;. Le sous-statut doit être &lt;/span&gt;&lt;b style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;à retourner PSM &lt;/b&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;ou &lt;/span&gt;&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;Réceptionné - A expédier&lt;/b&gt;&lt;b style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetDamagedEquipLaunchExpedition.Record_Type_Name__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Equipement_vole_perdu</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>ScreenWrongStatus</name>
        <label>Mauvais Status</label>
        <locationX>50</locationX>
        <locationY>638</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorMessageWrongStatus</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 153, 0);&quot;&gt;Le statut de l&apos;équipement sinistré ne vous permet pas de déclencher un déstockage sur le stock de réserve. Pour ce faire le statut doit être à &quot;En commande pièces&quot;.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>914</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>ScreenSelectAction</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>GSQueueId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>TCQueueId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VAR_DamagedEquipmentId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
