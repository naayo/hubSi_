<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>51.0</apiVersion>
    <decisions>
        <name>Is_CustomPicklistLevel_Empty</name>
        <label>Is CustomPicklistLevel Empty ?</label>
        <locationX>176</locationX>
        <locationY>518</locationY>
        <defaultConnector>
            <targetReference>ScreenSelectLevelCost</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Nope</defaultConnectorLabel>
        <rules>
            <name>Yup_empty</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>TypeCoutEquipId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetEquipmentCost</targetReference>
            </connector>
            <label>Yup, empty</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <name>CustomPicklistLevel</name>
        <dataType>String</dataType>
        <displayField>ValueLevel__c</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Object__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ObjectSelection.selectedValue</elementReference>
            </value>
        </filters>
        <object>EquipmentCostType__c</object>
        <outputAssignments>
            <assignToReference>VAR_SelectedLevel</assignToReference>
            <field>ValueLevel__c</field>
        </outputAssignments>
    </dynamicChoiceSets>
    <formulas>
        <name>UnitCostNeg</name>
        <dataType>Currency</dataType>
        <expression>-{!UnitCost}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>UnitCostToStore</name>
        <dataType>Currency</dataType>
        <expression>IF ({!GetEquipmentCost.ChangeableCost__c}==False,{!GetEquipmentCost.UnitCost__c},{!UnitCost})</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>Ajout Coût Equipement Sinistré {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Ajout Coût Equipement Sinistré</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>CreateAssociatedCost</name>
        <label>CreateAssociatedCost</label>
        <locationX>176</locationX>
        <locationY>1094</locationY>
        <connector>
            <targetReference>Somme_des_couts_associes</targetReference>
        </connector>
        <inputAssignments>
            <field>Comment__c</field>
            <value>
                <elementReference>Comment</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DamagedEquipment__c</field>
            <value>
                <elementReference>VAR_DamagedEquipmentId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>EquipmentCostType__c</field>
            <value>
                <elementReference>GetEquipmentCost.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ManpowerCost__c</field>
            <value>
                <elementReference>GetEquipmentCost.ManpowerCost__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>GetEquipmentCost.Object__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Object__c</field>
            <value>
                <elementReference>GetEquipmentCost.Object__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UnitCost__c</field>
            <value>
                <elementReference>UnitCostToStore</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ValueLevel__c</field>
            <value>
                <elementReference>GetEquipmentCost.ValueLevel__c</elementReference>
            </value>
        </inputAssignments>
        <object>AssociatedCost__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_TypeCoutEquip</name>
        <label>Get TypeCoutEquip</label>
        <locationX>176</locationX>
        <locationY>398</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_CustomPicklistLevel_Empty</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Object__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ObjectSelection.selectedValue</elementReference>
            </value>
        </filters>
        <filters>
            <field>ValueLevel__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>EquipmentCostType__c</object>
        <outputAssignments>
            <assignToReference>TypeCoutEquipId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>GetEquipmentCost</name>
        <label>GetEquipmentCost</label>
        <locationX>176</locationX>
        <locationY>854</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ScreenAddCost</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Object__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ObjectSelection.selectedValue</elementReference>
            </value>
        </filters>
        <filters>
            <field>ValueLevel__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VAR_SelectedLevel</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EquipmentCostType__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetEquipmentCostTypeRTId</name>
        <label>GetEquipmentCostTypeRTId</label>
        <locationX>176</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ScreenSelectObjectCost</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VAR_RTEquipmentCostType</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>UpdateDamagedEquipement</name>
        <label>Mise à Jour Equipement Sinistré</label>
        <locationX>176</locationX>
        <locationY>1334</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VAR_DamagedEquipmentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>RealCost__c</field>
            <value>
                <elementReference>Somme_des_couts_associes.SumCoutUnitaire</elementReference>
            </value>
        </inputAssignments>
        <object>Equipement_sinistre__c</object>
    </recordUpdates>
    <screens>
        <name>ScreenAddCost</name>
        <label>Ajout Coût</label>
        <locationX>176</locationX>
        <locationY>974</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>CreateAssociatedCost</targetReference>
        </connector>
        <fields>
            <name>UnitCost</name>
            <dataType>Currency</dataType>
            <defaultValue>
                <elementReference>GetEquipmentCost.UnitCost__c</elementReference>
            </defaultValue>
            <fieldText>Coût Unitaire</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;S&apos;il s&apos;agit d&apos;un SAV &lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;débit, veuillez saisir un montant négatif&lt;/span&gt;.&lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
            <scale>2</scale>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetEquipmentCost.ChangeableCost__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>TXT_CostMustBeNeg</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Le coût unitaire saisi doit être négatif car il s&apos;agit d&apos;un SAV débit.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>1 AND 2</conditionLogic>
                <conditions>
                    <leftValueReference>UnitCost</leftValueReference>
                    <operator>GreaterThan</operator>
                    <rightValue>
                        <numberValue>0.0</numberValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>VAR_SelectedLevel</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>&apos;SAV DEBIT&apos;</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>NonEditableUnitCost</name>
            <fieldText>&lt;p&gt;Coût Unitaire : {!GetEquipmentCost.UnitCost__c} €&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetEquipmentCost.ChangeableCost__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Comment</name>
            <dataType>String</dataType>
            <fieldText>Commentaire</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>ScreenSelectLevelCost</name>
        <label>Sélection Niveau Coût</label>
        <locationX>264</locationX>
        <locationY>638</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>GetEquipmentCost</targetReference>
        </connector>
        <fields>
            <name>Level</name>
            <choiceReferences>CustomPicklistLevel</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Niveau</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>ScreenSelectObjectCost</name>
        <label>Sélection Objet Coût</label>
        <locationX>176</locationX>
        <locationY>278</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Get_TypeCoutEquip</targetReference>
        </connector>
        <fields>
            <name>ObjectSelection</name>
            <extensionName>c:Flow_CustomPicklistObjectEquipmentCost</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>recordTypeId</name>
                <value>
                    <elementReference>GetEquipmentCostTypeRTId.Id</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetEquipmentCostTypeRTId</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>Somme_des_couts_associes</name>
        <label>Somme des coûts associés</label>
        <locationX>176</locationX>
        <locationY>1214</locationY>
        <connector>
            <targetReference>UpdateDamagedEquipement</targetReference>
        </connector>
        <flowName>AssociatedCostSum</flowName>
        <inputAssignments>
            <name>EquipSinId</name>
            <value>
                <elementReference>VAR_DamagedEquipmentId</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <variables>
        <name>TypeCoutEquipId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VAR_DamagedEquipmentId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VAR_RTEquipmentCostType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VAR_SelectedLevel</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
